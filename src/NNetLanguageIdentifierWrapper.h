/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class NNetLanguageIdentifierWrapper */

#ifndef _Included_NNetLanguageIdentifierWrapper
#define _Included_NNetLanguageIdentifierWrapper
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     NNetLanguageIdentifierWrapper
 * Method:    getUnknownLanguage
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_NNetLanguageIdentifierWrapper_getUnknownLanguage
  (JNIEnv *, jclass);

/*
 * Class:     NNetLanguageIdentifierWrapper
 * Method:    newNNetLanguageIdentifier
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_NNetLanguageIdentifierWrapper_newNNetLanguageIdentifier__
  (JNIEnv *, jclass);

/*
 * Class:     NNetLanguageIdentifierWrapper
 * Method:    newNNetLanguageIdentifier
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_NNetLanguageIdentifierWrapper_newNNetLanguageIdentifier__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     NNetLanguageIdentifierWrapper
 * Method:    deleteNNetLanguageIdentifier
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_NNetLanguageIdentifierWrapper_deleteNNetLanguageIdentifier
  (JNIEnv *, jclass, jlong);

/*
 * Class:     NNetLanguageIdentifierWrapper
 * Method:    findLanguage
 * Signature: (JLjava/lang/String;)LNNetLanguageIdentifierWrapper/Result;
 */
JNIEXPORT jobject JNICALL Java_NNetLanguageIdentifierWrapper_findLanguage
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     NNetLanguageIdentifierWrapper
 * Method:    findTopNMostFreqLangs
 * Signature: (JLjava/lang/String;I)[LNNetLanguageIdentifierWrapper/Result;
 */
JNIEXPORT jobjectArray JNICALL Java_NNetLanguageIdentifierWrapper_findTopNMostFreqLangs
  (JNIEnv *, jclass, jlong, jstring, jint);

#ifdef __cplusplus
}
#endif
#endif
